# This workflow is to automatically publish and tag packages
#
# It waits until all other ci tasks to pass before running the critical section.

name: release
on:
  push:
    branches:
      - master

jobs:
  release:
    # env:
    #   PUBLISH_CHECK_JSON: $(dart ./script/tool/lib/src/main.dart publish-check --machine)
    #   PUBLISH_CHECK_STATUS: $(dart ./script/tool/lib/src/main.dart read-map-json --json "$PUBLISH_CHECK_JSON" --key "status")
    name: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
      with:
        path: flutter
        repository: flutter/flutter
        ref: master
        # Shallow clones don't work; see https://github.com/flutter/flutter/issues/18532
        fetch-depth: 0
    - name: Set up Flutter
      run: |
        # Add tags, which are also necessary for version checks to work.
        git fetch origin +refs/tags/*:refs/tags/*
        # Set channel
        bin\flutter channel ${{matrix.channel}}
        bin\flutter upgrade
        # Add fluter to path.
        echo "$env:GITHUB_WORKSPACE\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      working-directory: ${{ github.workspace }}/flutter
    - name: Doctor
      # Run doctor, for ease of debugging any issues.
      run: flutter doctor -v
    - name: Set up tools
      run: dart pub get
      working-directory: ${{ github.workspace }}/plugins/script/tool
#       - name: Cancel if PUBLISH_CHECK_STATUS no-publish
#         # Prints the status, all the steps after this only runs if PUBLISH_CHECK_STATUS == 'needs-publish'
#         run: echo "The plugins updated in this commit have already been published."
#         if: ${{ $PUBLISH_CHECK_STATUS == 'no-publish' }}
#       - name: Report failure if PUBLISH_CHECK_STATUS error
#         # Prints the status, all the steps after this only runs if PUBLISH_CHECK_STATUS == 'needs-publish'
#         run: |
#           echo "There's an error occured in `publish-check`, please find the details in the "Get publish check status" step"
#           exit 1
#         if: ${{ $PUBLISH_CHECK_STATUS == 'error' }}

# # ######################################################################################### #
# # All the steps below must be run with `if: ${{ PUBLISH_CHECK_STATUS == 'needs-publish' }}` #
# # ######################################################################################### #

#       # This workflow should be the last to run. So wait for all the other tests to succeed.
#       - name: Wait on all tests
#         uses: lewagon/wait-on-check-action@1b1630e169116b58a4b933d5ad7effc46d3d312d
#         with:
#           ref: ${{ github.sha }} # can be commit SHA or tag too
#           running-workflow-name: 'release'
#           repo-token: ${{ secrets.GITHUB_TOKEN }}
#           wait-interval: 10 # seconds
#           allowed-conclusions: success
#         if: ${{ $PUBLISH_CHECK_STATUS == 'needs-publish' }}

#       # The release process should be synchronized to avoid child commit release before the parent commit,
#       # which might cause issue when child commit and parent commit both contain version updates for the same
#       # plugin.
#       - name: Wait on "release" workflow at last commit
#         uses: lewagon/wait-on-check-action@1b1630e169116b58a4b933d5ad7effc46d3d312d
#         with:
#           ref: ${{ github.sha }}~ # can be commit SHA or tag too
#           check-name: 'release'
#           repo-token: ${{ secrets.GITHUB_TOKEN }}
#           wait-interval: 10 # seconds
#           # TODO(cyanglaz), only allow success and skipped after https://github.com/flutter/plugins/pull/3840 lands and correct configurations added to this workflow.
#           # https://github.com/flutter/flutter/issues/81444
#           allowed-conclusions: success,skipped,cancelled,failure
#         if: ${{ $PUBLISH_CHECK_STATUS == 'needs-publish' }}

#       # Checks out a copy of the repo.
#       - name: Checkout code
#         uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
#         with:
#           fetch-depth: 0 # Fetch all history so the tool can get all the tag to determine version.
#         if: ${{ $PUBLISH_CHECK_STATUS == 'needs-publish' }}

#       # TODO(cyanglaz): add real publish command.
#       - name: run release
#         run: echo "replace this command with release command"
#         if: ${{ $PUBLISH_CHECK_STATUS == 'needs-publish' }}

        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
